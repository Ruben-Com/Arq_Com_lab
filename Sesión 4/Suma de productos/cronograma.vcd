$date
  Thu Dec 10 10:53:51 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module tb_rca $end
$var reg 2 ! a[1:0] $end
$var reg 2 " b[1:0] $end
$var reg 2 # r[1:0] $end
$var reg 1 $ cin $end
$var reg 1 % cout $end
$var reg 1 & marca $end
$scope module componente $end
$var reg 2 ' x_in[1:0] $end
$var reg 2 ( y_in[1:0] $end
$var reg 1 ) c_in $end
$var reg 2 * sal[1:0] $end
$var reg 1 + c_out $end
$var reg 2 , c_aux[1:0] $end
$scope module g(0) $end
$scope module lsb $end
$scope module primeros $end
$var reg 1 - x $end
$var reg 1 . y $end
$var reg 1 / c_in $end
$var reg 1 0 s $end
$var reg 1 1 c_out $end
$var reg 1 2 not_x $end
$var reg 1 3 not_y $end
$var reg 1 4 not_c_in $end
$var reg 1 5 s_and1 $end
$var reg 1 6 s_and2 $end
$var reg 1 7 s_and3 $end
$var reg 1 8 s_and4 $end
$var reg 1 9 c_out_and1 $end
$var reg 1 : c_out_and2 $end
$var reg 1 ; c_out_and3 $end
$scope module notx $end
$var reg 1 < e $end
$var reg 1 = sal $end
$upscope $end
$scope module noty $end
$var reg 1 > e $end
$var reg 1 ? sal $end
$upscope $end
$scope module notc_in $end
$var reg 1 @ e $end
$var reg 1 A sal $end
$upscope $end
$scope module and1_sal $end
$var reg 1 B e1 $end
$var reg 1 C e2 $end
$var reg 1 D e3 $end
$var reg 1 E sal $end
$upscope $end
$scope module and2_sal $end
$var reg 1 F e1 $end
$var reg 1 G e2 $end
$var reg 1 H e3 $end
$var reg 1 I sal $end
$upscope $end
$scope module and3_sal $end
$var reg 1 J e1 $end
$var reg 1 K e2 $end
$var reg 1 L e3 $end
$var reg 1 M sal $end
$upscope $end
$scope module and4_sal $end
$var reg 1 N e1 $end
$var reg 1 O e2 $end
$var reg 1 P e3 $end
$var reg 1 Q sal $end
$upscope $end
$scope module sal $end
$var reg 1 R e1 $end
$var reg 1 S e2 $end
$var reg 1 T e3 $end
$var reg 1 U e4 $end
$var reg 1 V sal $end
$upscope $end
$scope module and1_c_out $end
$var reg 1 W e1 $end
$var reg 1 X e2 $end
$var reg 1 Y e3 $end
$var reg 1 Z sal $end
$upscope $end
$scope module and2_c_out $end
$var reg 1 [ e1 $end
$var reg 1 \ e2 $end
$var reg 1 ] e3 $end
$var reg 1 ^ sal $end
$upscope $end
$scope module and3_c_out $end
$var reg 1 _ e1 $end
$var reg 1 ` e2 $end
$var reg 1 a e3 $end
$var reg 1 b sal $end
$upscope $end
$scope module cout $end
$var reg 1 c e1 $end
$var reg 1 d e2 $end
$var reg 1 e e3 $end
$var reg 1 f e4 $end
$var reg 1 g sal $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module g(1) $end
$scope module msb $end
$scope module primeros $end
$var reg 1 h x $end
$var reg 1 i y $end
$var reg 1 j c_in $end
$var reg 1 k s $end
$var reg 1 l c_out $end
$var reg 1 m not_x $end
$var reg 1 n not_y $end
$var reg 1 o not_c_in $end
$var reg 1 p s_and1 $end
$var reg 1 q s_and2 $end
$var reg 1 r s_and3 $end
$var reg 1 s s_and4 $end
$var reg 1 t c_out_and1 $end
$var reg 1 u c_out_and2 $end
$var reg 1 v c_out_and3 $end
$scope module notx $end
$var reg 1 w e $end
$var reg 1 x sal $end
$upscope $end
$scope module noty $end
$var reg 1 y e $end
$var reg 1 z sal $end
$upscope $end
$scope module notc_in $end
$var reg 1 { e $end
$var reg 1 | sal $end
$upscope $end
$scope module and1_sal $end
$var reg 1 } e1 $end
$var reg 1 !" e2 $end
$var reg 1 "" e3 $end
$var reg 1 #" sal $end
$upscope $end
$scope module and2_sal $end
$var reg 1 $" e1 $end
$var reg 1 %" e2 $end
$var reg 1 &" e3 $end
$var reg 1 '" sal $end
$upscope $end
$scope module and3_sal $end
$var reg 1 (" e1 $end
$var reg 1 )" e2 $end
$var reg 1 *" e3 $end
$var reg 1 +" sal $end
$upscope $end
$scope module and4_sal $end
$var reg 1 ," e1 $end
$var reg 1 -" e2 $end
$var reg 1 ." e3 $end
$var reg 1 /" sal $end
$upscope $end
$scope module sal $end
$var reg 1 0" e1 $end
$var reg 1 1" e2 $end
$var reg 1 2" e3 $end
$var reg 1 3" e4 $end
$var reg 1 4" sal $end
$upscope $end
$scope module and1_c_out $end
$var reg 1 5" e1 $end
$var reg 1 6" e2 $end
$var reg 1 7" e3 $end
$var reg 1 8" sal $end
$upscope $end
$scope module and2_c_out $end
$var reg 1 9" e1 $end
$var reg 1 :" e2 $end
$var reg 1 ;" e3 $end
$var reg 1 <" sal $end
$upscope $end
$scope module and3_c_out $end
$var reg 1 =" e1 $end
$var reg 1 >" e2 $end
$var reg 1 ?" e3 $end
$var reg 1 @" sal $end
$upscope $end
$scope module cout $end
$var reg 1 A" e1 $end
$var reg 1 B" e2 $end
$var reg 1 C" e3 $end
$var reg 1 D" e4 $end
$var reg 1 E" sal $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00 !
b00 "
b00 #
0$
0%
0&
b00 '
b00 (
0)
b00 *
0+
b00 ,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
1Y
0Z
0[
0\
1]
0^
0_
0`
1a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
17"
08"
09"
0:"
1;"
0<"
0="
0>"
1?"
0@"
0A"
0B"
0C"
0D"
0E"
#1000000
b00 *
0+
00
01
12
13
14
1=
1?
1A
1C
1D
0E
1F
1H
0I
1J
1K
0M
0Q
0V
0Z
0^
0b
0g
0k
0l
1m
1n
1o
1x
1z
1|
1!"
1""
0#"
1$"
1&"
0'"
1("
1)"
0+"
0/"
04"
08"
0<"
0@"
0E"
#2000000
0E
0I
0M
0#"
0'"
0+"
#20000000
b11 !
1$
b11 '
1)
1-
1/
1<
1@
1B
1L
1N
1P
1W
1[
1\
1`
1h
1w
1}
1,"
15"
19"
#21000000
02
04
15
17
1:
0=
0A
0D
1E
0F
0H
0J
1M
0Q
1R
1T
0Z
1^
0b
1d
0m
1p
0x
1#"
0$"
0("
0/"
10"
08"
0<"
#22000000
b11 #
b11 *
b01 ,
10
11
05
07
0E
0I
0M
0R
0T
1V
1g
1j
1k
1{
0'"
1*"
0+"
1."
14"
1:"
1>"
#23000000
b10 #
b10 *
00
0V
0o
1u
0|
0""
0&"
0+"
0/"
1<"
0@"
1B"
#24000000
1%
1+
1l
0p
0#"
0'"
00"
1E"
#25000000
b00 #
1&
b00 *
0k
04"
#27000000
